<?xml version="1.0"?>

<!-- For more information on using Web.config transformation visit http://go.microsoft.com/fwlink/?LinkId=301874 -->

<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
	<appSettings>

	<add key="envType" value="production"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="serverName" value="production"   xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="credentialFinderSite" value="https://credentialFinder.org/" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="usingQuantitiveValue" value="false" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="usingSSL" value="true"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="adminKey" value="24-E5-6B-78-02-F9-CE-CD-FB-40-F7-EB-08-56-06-B7"   xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="credentialPublisherSite" value="https://credentialengine.org/publisher/" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

	<add key="ceServicesLinkCheckerSearch" value="https://credentialengine.org/ceServices/search/linkchecker" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		
	<add key="accountsRegister" value="https://credentialengine.org/accounts/account/register" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

	<!--<add key="accountsLogin" value="" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>-->
	<add key="accountsLogin" value="https://credentialengine.org/accounts/account/login" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

	<add key="accountsAuthorizeApi" value="https://credentialengine.org/accounts/Api/Authorize" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="accountsDashboard" value="https://credentialengine.org/accounts/dashboard" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="CEAccountOrganizationsForUserApi" value="https://credentialengine.org/accounts/api/GetOrganizationsForUser" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    
	<add key="finderClientToken" value="9ef45f8b-9fee-49bd-999c-1c5ce0d2736e"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="finderSecretToken" value="8e994f74-a70e-4530-b906-e7de896058d7"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		
		
	<add key="isAuthRequiredForImport" value="false" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		
	<add key="widgetUploadPath" value="c://CredentialEngine//CredentialFinder//widgetUploads//" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="widgetResourceUrl" value="//credentialfinder.org/wcontent/"   xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    
	<!--<add key="elasticSearchUrl" value="http://52.176.156.172:9200/" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>-->
	<add key="elasticSearchUrl" value="http://localhost:9200/" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="credentialCollection" value="credentials" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="organizationCollection" value="organizations" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="assessmentCollection" value="assessments" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="learningOppCollection" value="learningopps" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

	<add key="usingElasticCredentialSearch" value="true" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="usingElasticOrganizationSearch" value="true" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="usingElasticAssessmentSearch" value="true" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="usingElasticLearningOppSearch"  value="true" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

    
	<!-- dev API keys, will need different ones for prod-->
	<!-- ACTUALLY will probably be the same-->
	<add key="goggleClientId" value="1068178611990-ftdrh61bi1p4krh3phf839hid5q5ptut.apps.googleusercontent.com"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="goggleClientSecret" value="UhLDaMF1j9v0u0DXUIbYB3L5"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

	<!-- Credential registry ========================================= -->
	<add key="usingGraphDocuments" value="false" />
	<add key="defaultCommunity" value="ce-registry"/>
	<add key="additionalCommunity" value=""/>
		
	<add key="credentialRegistryUrl" value="https://credentialengineregistry.org/"
	xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="cerGetEnvelope" value="https://credentialengineregistry.org/{0}/envelopes/{1}"
	xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

	<add key="credentialRegistryResource" value="https://credentialengineregistry.org/{0}/resources/{1}"
	xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="credentialRegistrySearch" value="https://credentialengineregistry.org/{0}/search?"
	xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

	<add key="cassResourceViewerUrl" value="https://cass.credentialengine.org/cass-editor/index.html?server=https://cass.credentialengine.org/&amp;ceasnDataFields=true&amp;origin=https://credentialengine.org&amp;css=https://credentialengine.org/publisher/Style/CassStyles&amp;frameworkId=https://cass.credentialengine.org/api/data/{0}" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		
	<add key="emailService" value="mailgun"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="usingTempOverrideEmail" value="no" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

	<!-- May want a 'to' email specific for the contact US!! -->
	<add key="contactUsMailTo" value="mparsons@credentialengine.org" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="contactUsMailFrom" value="DoNotReply@credentialEngine.org" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<!-- Email for system and/or application related messages -->
	<add key="systemAdminEmail" value="mparsons@credentialengine.org" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="systemNotifyFromEmail" value="credFinder@credentialengine.org" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="logAllEmail" value="yes" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

	<!-- LOG SETTINGS ========================================================================
	Notes:
	- Be sure to give write access to the everyone role for the following log file
	-->
	<add key="logErrors" value="yes" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="notifyOnException" value="yes" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<!--<add key="isDebug" value="TRUE" />-->
	<add key="appTraceLevel" value="5"  xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

	<add key="path.error.log" value="C:\@logs\finder\[date]_ErrorLog.txt" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="path.email.log" value="C:\@logs\finder\[date]_EmailLog.txt" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="path.trace.log" value="C:\@logs\finder\[date]_TraceLog.txt" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
	<add key="path.log.file" value="C:\@logs\finder\files\[date]_[filename].json" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		
	<add key="doingLinkChecking" value="false" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
		
	<!-- Credential Registry Search -->
	<add key="AssistantCTDLJSONSearchAPIUrl" value="https://credentialengine.org/assistant/search/ctdl" xdt:Transform="SetAttributes" xdt:Locator="Match(key)" />
	<add key="AssistantGremlinSearchAPIUrl" value="https://credentialengine.org/assistant/search/gremlin" xdt:Transform="SetAttributes" xdt:Locator="Match(key)" />
	<add key="CredentialEngineAPIKey" value="b13924b5-5583-4756-b176-77f707d06f57" xdt:Transform="SetAttributes" xdt:Locator="Match(key)" />

	</appSettings>
	<connectionStrings>
	
		<add name="DefaultConnection" connectionString="Server=credEngine2;database=ctdlEditor;User Id=ctiAdmin;password=ct!Cr*dM#ster2;Pooling=true;Min Pool Size=10;Max Pool Size=50;Connect Timeout=200" providerName="System.Data.SqlClient" xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
		
		 <add name="AccountEntities" connectionString="metadata=res://*/Accounts.Accounts.csdl|res://*/Accounts.Accounts.ssdl|res://*/Accounts.Accounts.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=credEngine2;initial catalog=ctdlEditor;persist security info=True;user Id=ctiAdmin;password=ct!Cr*dM#ster2;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>

		<add name="MainConnection" connectionString="Server=credEngine2;database=credFinder;User Id=ctiAdmin;password=ct!Cr*dM#ster2;Pooling=true;Min Pool Size=10;Max Pool Size=50;Connect Timeout=200"
		providerName="System.Data.SqlClient" xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
		<add name="workIT_RO" connectionString="Server=credEngine2;database=credFinder;User Id=ctiReader;password=ct!R#*der2;Pooling=true;Min Pool Size=10;Max Pool Size=50;Connect Timeout=200"
			xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>

		<add name="workITEntities" connectionString="metadata=res://*/Tables.workIT.csdl|res://*/Tables.workIT.ssdl|res://*/Tables.workIT.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=credEngine2;initial catalog=credFinder;persist security info=True;user Id=ctiAdmin;password=ct!Cr*dM#ster2;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" 
			xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
		
		<add name="workITViews" connectionString="metadata=res://*/Views.workITViews.csdl|res://*/Views.workITViews.ssdl|res://*/Views.workITViews.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=credEngine2;initial catalog=credFinder;persist security info=True;user Id=ctiReader;password=ct!R#*der2;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>

	</connectionStrings>
		<system.web>
			<!--<httpCookies httpOnlyCookies="true" requireSSL="true" lockItem="true" xdt:Transform="Replace" />-->
    <compilation xdt:Transform="RemoveAttributes(debug)" />
    <!--
      In the example below, the "Replace" transform will replace the entire
      <customErrors> section of your Web.config file.
      Note that because there is only one customErrors section under the
      <system.web> node, there is no need to use the "xdt:Locator" attribute.

      <customErrors defaultRedirect="GenericError.htm"
        mode="RemoteOnly" xdt:Transform="Replace">
        <error statusCode="500" redirect="InternalError.htm"/>
      </customErrors>
    -->
      <sessionState mode="SQLServer"
              sqlConnectionString="data source=credEngine2;user id=ASPSessionAdmin;password=_Cr$Sess|{}Master;"
              sqlCommandTimeout="45"
              cookieless="false"
              regenerateExpiredSessionId="false"
              timeout="360"
              xdt:Transform="Replace"/>
  </system.web>

	<system.webServer>
		<rewrite xdt:Transform="Insert">
			<rules>
				<rule name="HTTP to HTTPS redirect" stopProcessing="true">
					<match url="(.*)" />
					<conditions>
						<add input="{HTTPS}" pattern="off" ignoreCase="true" />
					</conditions>
					<action type="Redirect" url="https://credentialfinder.org/{R:1}" redirectType="Permanent" />
				</rule>
				<rule name="Redirect .com/.net to .org" stopProcessing="true">
					<match url="(.*)" />
					<conditions>
						<add input="{HTTP_HOST}" pattern="^(www.)?credentialfinder.(com|net)$" />
					</conditions>
					<action type="Redirect" url="https://credentialfinder.org/{R:0}" redirectType="Permanent" />
				</rule>
			</rules>
			<outboundRules>
				<rule name="Add Strict-Transport-Security when HTTPS" enabled="true">
					<match serverVariable="RESPONSE_Strict_Transport_Security"
						pattern=".*" />
					<conditions>
						<add input="{HTTPS}" pattern="on" ignoreCase="true" />
					</conditions>
					<action type="Rewrite" value="max-age=31536000" />
				</rule>
			</outboundRules>
		</rewrite>
	</system.webServer>
</configuration>
