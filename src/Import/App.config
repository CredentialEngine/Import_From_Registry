<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2" />
  </startup>
  <appSettings>
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <add key="aspnet:MaxJsonDeserializerMembers" value="5000" />
    <add key="siteVersion" value="2018-05-14" />
	  <add key="GeoNamesUserName" value="TBD" />
	  
    <add key="envType" value="dev" />
    <add key="serverName" value="localhost" />
    <!-- daily, sinceLastRun, hourly, adhoc, or integer - meaning minutes. Could use to schedule for 7:00 am and minutes since 8pm previous night
			will need to record or derive the last run -->
    <add key="scheduleType" value="adhoc" />
    <add key="DoingDownloadOnly" value="true" />
    
    <!-- NOTE: remember UTC if using adhoc start/end dates-->
    <add key="startingDate" value="2017-11-02T00:00:12" />
    <add key="endingDate" value="2018-12-31T23:59:59" />
    <add key="usingUTC_ForTime" value="true" />
    <!-- *** Actions: 0-normal; 1-DeleteOnly; 2-SkipDelete -->
    <add key="deleteAction" value="0" />
    
    <add key="maxImportRecords" value="0" />
    <add key="maxExceptions" value="200" />
    <add key="skippingLinkChecking" value="true" />
    <add key="treatingRemoteFileNotExistingAsError" value="false" />
    <add key="requireRegionOrIsGlobal" value="false" />
    <add key="includeHasPartIsPartWithConnections" value="true" />
    <add key="doingExpandOfRegion" value="true" />
    <!-- dev API keys, will need different ones for prod-->
    <!--http://www.asp.net/mvc/overview/security/create-an-aspnet-mvc-5-app-with-facebook-and-google-oauth2-and-openid-sign-on-->
    <!-- -->
    <add key="maxKeywordLength" value="200" />
    <add key="maxReferenceTextLength" value="500" />
    <add key="maxReferenceUrlLength" value="600" />
    <!-- CR registry ========================================= -->
    <!-- -->
 <add key="credentialRegistryUrl" value="https://sandbox.credentialengineregistry.org" />
    <add key="credentialRegistryGet" value="https://sandbox.credentialengineregistry.org/ce-registry/envelopes/{0}" />
    <add key="credentialRegistrySearch" value="https://sandbox.credentialengineregistry.org/ce-registry/search?" />
    <add key="credentialRegistryResource" value="https://sandbox.credentialengineregistry.org/resources/{0}" />


	
	  <!-- elasticsearch ========================================= -->
	<add key="elasticSearchUrl" value="http://localhost:9200/" />
	<!-- elastic search collection. This is an alias. The ES interface is to be used to associate the appropriate collection with this alias-->
    
	<!--    -->
    <add key="credentialCollection" value="credentials" />
    <add key="organizationCollection" value="organizations" />
    <add key="assessmentCollection" value="assessments" />
    <add key="learningOppCollection" value="learningopps" />


   <add key="usingElasticCredentialSearch" value="true" />
    <add key="usingElasticOrganizationSearch" value="true" />
    <add key="usingElasticAssessmentSearch" value="true" />
    <add key="usingElasticLearningOppSearch" value="true" />

    <!--  False - will update caches, and elastic on a per record basis, 
          True - store requests in the SearchPendingReindex table, and handle at end of import.
    -->
    <add key="delayingAllCacheUpdates" value="true" />
    
	<!-- 0-none; 1- Use Index; 2-use Bulk-->
	<add key="updateCredIndexAction" value="2" />  
	  
    <!-- ACCOUNT/CONTACT US NOTIFICATION ====================================================== -->
    <!-- notifyOnEmailNotFound: if true, user will be notified where email not found during forgot password process -->
    <add key="notifyOnEmailNotFound" value="true" />
    <!-- EmailService: smtp, serviceApi, mailgun -->
    <add key="emailService" value="serviceApi" />
    <add key="MailgunSendingDomainName" value="TBD" />
    <add key="MailgunSecretAPIKey" value="TBD" />
    <add key="MailgunPublicAPIKey" value="TBD" />
    <!-- use web service, and ignore others TEMP UNTIL OUR OWN IS SET UP-->
    <add key="SendEmailService" value="" />
    <add key="SmtpHost" value="localhost" />
    <!-- sendEmailFlag - use TRUE uppercase to set on -->
    <add key="sendEmailFlag" value="TRUE" />
    <add key="usingTempOverrideEmail" value="yes" />
    <!-- contact US email addresses -->
    <add key="contactUsMailTo" value="contactUs@test.com" />
    <add key="contactUsMailFrom" value="DoNotReply@test.org" />
    <!-- Email for system and/or application related messages -->
    <add key="systemAdminEmail" value="contactUs@test.com" />
    <add key="systemNotifyFromEmail" value="thisMachine@test.org" />
    <add key="logAllEmail" value="yes" />
    <!-- LOG SETTINGS ========================================================================
      Notes:
        - Be sure to give write access to the everyone role for the following log file
    -->
    <add key="logErrors" value="yes" />
    <add key="notifyOnException" value="no" />
    <add key="appTraceLevel" value="6" />
    <add key="path.error.log" value="C:\@logs\[date]_FinderImport_ErrorLog.txt" />
    <add key="path.email.log" value="C:\@logs\[date]_FinderImport_EmailLog.txt" />
    <add key="path.trace.log" value="C:\@logs\[date]_FinderImport_TraceLog.txt" />
    <add key="path.log.file" value="C:\@logs\RegistryDownload\[date]_[filename].json" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  <connectionStrings>
    <!-- DefaultConnection and AccountEntities are used for account mgmt -->
    <add name="DefaultConnection" connectionString="Server=YourTestDBServer;database=ctdlEditor;User Id=ctiAdmin;password=ChangeMe;Pooling=true;Min Pool Size=10;Max Pool Size=50;Connect Timeout=200" providerName="System.Data.SqlClient" />
    
    <add name="AccountEntities" connectionString="metadata=res://*/Accounts.Accounts.csdl|res://*/Accounts.Accounts.ssdl|res://*/Accounts.Accounts.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=YourTestDBServer;initial catalog=ctdlEditor;persist security info=True;user id=ctiAdmin;password=ChangeMe;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
    
  <!--    -->
   <add name="MainConnection" connectionString="Server=YourTestDBServer;database=credFinder;User Id=ctiAdmin;password=ChangeMe;Pooling=true;Min Pool Size=10;Max Pool Size=50;Connect Timeout=200" providerName="System.Data.SqlClient" />
    
    <add name="workIT_RO" connectionString="Server=YourTestDBServer;database=credFinder;User Id=ctiReader;password=ChangeMe;Pooling=true;Min Pool Size=10;Max Pool Size=50;Connect Timeout=200" providerName="System.Data.SqlClient" />
    
    <add name="workITEntities" connectionString="metadata=res://*/Tables.workIT.csdl|res://*/Tables.workIT.ssdl|res://*/Tables.workIT.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=YourTestDBServer;initial catalog=credFinder;persist security info=True;user id=ctiAdmin;password=ChangeMe;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
    
    <add name="workITViews" connectionString="metadata=res://*/Views.workITViews.csdl|res://*/Views.workITViews.ssdl|res://*/Views.workITViews.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=YourTestDBServer;initial catalog=credFinder;persist security info=True;user id=ctiAdmin;password=ChangeMe;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
   
  </connectionStrings>
  <system.web.extensions>
    <scripting>
      <webServices>
        <jsonSerialization maxJsonLength="2147483647" />
      </webServices>
    </scripting>
  </system.web.extensions>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
</configuration>