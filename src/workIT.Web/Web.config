<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=301880
  -->
<configuration>
	<configSections>

		<section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
		<!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
	</configSections>

	<appSettings>
		<add key="webpages:Version" value="3.0.0.0" />
		<add key="webpages:Enabled" value="false" />
		<add key="ClientValidationEnabled" value="true" />
		<add key="UnobtrusiveJavaScriptEnabled" value="true" />
		<add key="aspnet:MaxJsonDeserializerMembers" value="5000" />

		<!-- env, version configurations-->
		<add key="siteVersion" value="2019-02-24a" />
		<add key="envType" value="development" />
		<add key="serverName" value="localhost" />

		<!-- ===== authentication related - mostly not used now (using SSO through accounts) -->
		<add key="usingSSL" value="false" />
		<!-- set to true to require email confirmation of registration. Set to false if no email service is configured. -->
		<add key="doingEmailConfirmation" value="false" />
		<add key="forgotPasswordExpiryDays" value="1" />
		<!-- dev google API keys, will need different ones for prod-->
		<!--Leave empty if not using google login-->
		<add key="goggleClientId" value="" />
		<!--<add key="goggleClientId" value="###YOUR_CLIENT_ID###.apps.googleusercontent.com" />-->
		<add key="goggleClientSecret" value="###PASWORD###" />
		
		<!-- ===== auth related for use with accounts site -->
		<add key="siteAdminUserId" value="1" />
		<add key="isAuthRequiredForImport" value="false" />
		<add key="adminKey" value="###PASWORD###" />
		<add key="CEAccountSystemStaticPassword" value="###PASWORD###" />

		<!-- if present will be used with SSO to the accounts site. 
			To use local accounts, and AspNetUsers, set accountsLogin to empty. 
			See Shared/_Header.cshtml-->
		<!--<add key="accountsLogin" value="" />-->

		<add key="accountsRegister" value="https://sandbox.credentialengine.org/accounts/account/register" />
		<add key="accountsLogin" value="https://sandbox.credentialengine.org/accounts/account/login" />
		<add key="accountsDashboard" value="https://sandbox.credentialengine.org/accounts/dashboard" />
		<add key="accountsAuthorizeApi" value="https://sandbox.credentialengine.org/accounts/Api/Authorize" />
		<add key="CEAccountOrganizationsForUserApi" value="https://sandbox.credentialengine.org/accounts/api/GetOrganizationsForUser" />
		
		<add key="finderCallbackUrl" value="Account/CE_Login" />
		<add key="finderClientToken" value="###PASWORD###" />
		<add key="finderSecretToken" value="###PASWORD###" />

		
		<!-- ======== general ========  -->
		<add key="showingSearchOnHome" value="true" />
		<add key="credentialPublisherSite" value="https://sandbox.credentialengine.org/publisher" />
		<add key="credentialCacheMinutes" value="60" />
		<add key="organizationCacheMinutes" value="60" />
		<add key="learningOppCacheMinutes" value="30" />
		<add key="credSearchCategories" value="2,4,13,14,18,21,39," />
		<add key="orgSearchCategories" value="6,7,8,9,30," />
		<add key="asmtSearchCategories" value="14,21,37,54,56," />
		<add key="loppSearchCategories" value="14,21,53," />
		<add key="appendingOrgNameToAutocomplete" value="true" />


		<!-- codes used for import services ========================================= -->
		<add key="maxKeywordLength" value="500" />
		<add key="maxReferenceTextLength" value="500" />
		<add key="maxReferenceUrlLength" value="600" />
		<add key="skippingLinkChecking" value="false" />
		<add key="treatingRemoteFileNotExistingAsError" value="false" />
		<add key="includingAllRolesForOrgRoles" value="false" />
		<add key="requireRegionOrIsGlobal" value="false" />
		<!-- for convenience, show IsPart filters with the other connections -->
		<add key="includeHasPartIsPartWithConnections" value="true" />
		<add key="doingLinkChecking" value="true" />
		<add key="doingExpandOfRegion" value="true" />


		<!-- widget ========================================= -->
		<!--widgetUploadPath - path to store uploaded logos and stylesheets -->
		<add key="widgetUploadPath" value="c://data//CredentialFinder//widgetUploads//" />

		<!-- elasticsearch ========================================= -->
		<!-- To control whether elastic or sql server is used for searching. Defaults to false. 
			 Change to true if an elastic instance has been enabled.  -->
		<add key="usingElasticCredentialSearch" value="false" />
		<add key="usingElasticOrganizationSearch" value="false" />
		<add key="usingElasticAssessmentSearch" value="false" />
		<add key="usingElasticLearningOppSearch" value="false" />

		<add key="elasticSearchUrl" value="http://localhost:9200/" />		
		<!--  names of the collection for each specific search -->
		<add key="credentialCollection" value="credentials" />
		<add key="organizationCollection" value="organizations" />
		<add key="assessmentCollection" value="assessments" />
		<add key="learningOppCollection" value="learningopps" />


		<!-- more applicable to a full rebuild of elastic-->
		<add key="delayingAllCacheUpdates" value="true" />
		<add key="credentialRebuildPageSize" value="9999" />

		<!-- 0-none; 1- Use Index DON'T USE!!; 2-use Bulk-->
		<add key="updateCredIndexAction" value="2" />

		<!-- Credential registry ========================================= -->
		<!-- Credential Registry Search -->
		<add key="CredentialEngineAPIKey" value="###PASWORD###" />

		<add key="AssistantCTDLJSONSearchAPIUrl" value="https://sandbox.credentialengine.org/assistant/search/ctdl" />
		<add key="AssistantGremlinSearchAPIUrl" value="https://sandbox.credentialengine.org/assistant/search/gremlin" />
		<add key="usingGraphDocuments" value="true" />
		<!--	SANDBOX	   -->
		<add key="credentialRegistryUrl" value="https://sandbox.credentialengineregistry.org/" />
		<add key="credentialRegistryGet" value="https://sandbox.credentialengineregistry.org/ce-registry/envelopes/{0}" />
		<add key="credentialRegistrySearch" value="https://sandbox.credentialengineregistry.org/ce-registry/search?" />
		<add key="credentialRegistryResource" value="https://sandbox.credentialengineregistry.org/graph/{0}" />

		<!-- Import related -->
		<add key="importing_credential" value="true" />
		<add key="importing_cost_manifest_schema" value="true" />
		<add key="importing_condition_manifest_schema" value="true" />
		<add key="importing_assessment_profile" value="true" />
		<add key="importing_learning_opportunity_profile" value="true" />
		<add key="importing_organization" value="true" />

		<add key="skipCredImportIfNoOccupations" value="false" />
		<add key="skipAsmtImportIfNoCompetencies" value="false" />
		<add key="skipLoppImportIfNoCompetencies" value="false" />
		<add key="skipOppImportIfNoShortRegions" value="false" />

		<!-- ACCOUNT/CONTACT US NOTIFICATION ====================================================== 
		Email is disabled. To use email there are examples of
		- using an API (via SendEmailService,
		- or Maingun by adding the domain and keys defined for your org.
		- or using smtpHost (not maintained)
		-->
		<!-- sendEmailFlag - use TRUE uppercase to set on 
			Leave as FALSE until a local email service is available
		-->
		<add key="sendEmailFlag" value="FALSE" />
		<!-- notifyOnEmailNotFound: if true, user will be notified where email not found during forgot password process -->
		<add key="notifyOnEmailNotFound" value="true" />
		<add key="notifyOnEmailNotConfirmed" value="true" />
		<!-- EmailService: smtp, serviceApi, sendGrid, mailgun -->
		<add key="emailService" value="serviceApi" />
		<add key="MailgunSendingDomainName" value="domain.org" />
		<add key="MailgunSecretAPIKey" value="###PASWORD###" />
		<add key="MailgunPublicAPIKey" value="###PASWORD###" />
		<!-- use web service, and ignore others -->
		<add key="SendEmailService" value="" />
		<add key="SmtpHost" value="localhost" />

		<add key="usingTempOverrideEmail" value="yes" />
		<add key="notifyingUserOnImport" value="false" />
		<!-- contact US email addresses -->
		<add key="contactUsMailTo" value="email@email.com" />
		<add key="contactUsMailFrom" value="DoNotReply@email.org" />
		<!-- Email for system and/or application related messages -->
		<add key="systemAdminEmail" value="email@email.com" />
		<add key="systemNotifyFromEmail" value="email@email.com" />
		<add key="logAllEmail" value="yes" />
		<!-- LOG SETTINGS ========================================================================
      Notes:
        - Be sure to give write access to the everyone role for the following log file
    -->
		<add key="logErrors" value="yes" />
		<add key="notifyOnException" value="no" />
		<add key="appTraceLevel" value="8" />
		<add key="botTraceLevel" value="8" />
		<add key="path.error.log" value="C:\@logs\[date]_finder_ErrorLog.txt" />
		<add key="path.email.log" value="C:\@logs\[date]_finder_EmailLog.txt" />
		<add key="path.trace.log" value="C:\@logs\[date]_finder_TraceLog.txt" />
		<add key="path.botTrace.log" value="C:\@logs\[date]_finder_botTraceLog.txt" />
		<add key="path.log.file" value="C:\@logs\[date]_[filename].json" />

		<add key="urlExceptions" value="www.linkedin.com; www.depaul.edu; plus.google.com; www.verifycco.org" />


	</appSettings>


	<connectionStrings>


		<!--<add name="DefaultConnection" connectionString="Server=(local);database=credFinder;User Id=ctiAdmin;password=YOURPASSWORDHERE;Pooling=true;Min Pool Size=10;Max Pool Size=50;Connect Timeout=200" providerName="System.Data.SqlClient" />

		<add name="AccountEntities" connectionString="metadata=res://*/Accounts.Accounts.csdl|res://*/Accounts.Accounts.ssdl|res://*/Accounts.Accounts.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=(local);initial catalog=credFinder;persist security info=True;user id=ctiAdmin;password=YOURPASSWORDHERE;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />

		<add name="MainConnection" connectionString="Server=(local);database=credFinder;User Id=ctiAdmin;password=YOURPASSWORDHERE;Pooling=true;Min Pool Size=10;Max Pool Size=50;Connect Timeout=200" providerName="System.Data.SqlClient" />

		<add name="workIT_RO" connectionString="Server=(local);database=credFinder;User Id=ctiReader;password=ctiDev2@16!;Pooling=true;Min Pool Size=10;Max Pool Size=50;Connect Timeout=200" providerName="System.Data.SqlClient" />

		<add name="workITEntities" connectionString="metadata=res://*/Tables.workIT.csdl|res://*/Tables.workIT.ssdl|res://*/Tables.workIT.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=(local);initial catalog=credFinder;persist security info=True;user id=ctiAdmin;password=YOURPASSWORDHERE;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
		
		<add name="workITViews" connectionString="metadata=res://*/Views.workITViews.csdl|res://*/Views.workITViews.ssdl|res://*/Views.workITViews.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=(local);initial catalog=credFinder;persist security info=True;user id=ctiAdmin;password=YOURPASSWORDHERE;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />-->

		<!-- MP  -->
		<add name="DefaultConnection" connectionString="Server=(local);database=credFinder;User Id=ctiAdmin;password=w@rkH#rdPl$yH%rd;Pooling=true;Min Pool Size=10;Max Pool Size=50;Connect Timeout=200" providerName="System.Data.SqlClient" />

		<add name="AccountEntities" connectionString="metadata=res://*/Accounts.Accounts.csdl|res://*/Accounts.Accounts.ssdl|res://*/Accounts.Accounts.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=(local);initial catalog=credFinder;persist security info=True;user id=ctiAdmin;password=w@rkH#rdPl$yH%rd;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />

		<add name="MainConnection" connectionString="Server=(local);database=credFinder;User Id=ctiAdmin;password=w@rkH#rdPl$yH%rd;Pooling=true;Min Pool Size=10;Max Pool Size=50;Connect Timeout=200" providerName="System.Data.SqlClient" />

		<add name="workIT_RO" connectionString="Server=(local);database=credFinder;User Id=ctiReader;password=ctiDev2@16!;Pooling=true;Min Pool Size=10;Max Pool Size=50;Connect Timeout=200" providerName="System.Data.SqlClient" />

		<add name="workITEntities" connectionString="metadata=res://*/Tables.workIT.csdl|res://*/Tables.workIT.ssdl|res://*/Tables.workIT.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=(local);initial catalog=credFinder;persist security info=True;user id=ctiAdmin;password=w@rkH#rdPl$yH%rd;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />

		<add name="workITViews" connectionString="metadata=res://*/Views.workITViews.csdl|res://*/Views.workITViews.ssdl|res://*/Views.workITViews.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=(local);initial catalog=credFinder;persist security info=True;user id=ctiAdmin;password=w@rkH#rdPl$yH%rd;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
		
	</connectionStrings>
	<system.web>

		<compilation debug="true" targetFramework="4.5.2" />
		<httpRuntime targetFramework="4.5.2" />
		<!--<httpCookies httpOnlyCookies="true" />-->
		<customErrors mode="Off" redirectMode="ResponseRewrite">
			<error statusCode="404" redirect="~/PageNotFound.html" />
		</customErrors>
		<sessionState mode="InProc" cookieless="UseCookies" timeout="720" />
		<!--<sessionState mode="SQLServer" sqlConnectionString="data source=(local);user id=ASPSessionAdmin;password=###PASSWORD###;" sqlCommandTimeout="45" cookieless="false" regenerateExpiredSessionId="false" timeout="360" />-->

		<httpModules>
			<add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web" />
		</httpModules>
	</system.web>
	<location path="signin-google">
		<system.web>
			<authorization>
				<allow users="*" />
			</authorization>
		</system.web>
	</location>
	<system.net>
		<settings>
			<httpWebRequest useUnsafeHeaderParsing="true" />
		</settings>
	</system.net>
	<system.webServer>
		<modules>
			<remove name="FormsAuthentication" />
			<remove name="TelemetryCorrelationHttpModule" />
			<add name="TelemetryCorrelationHttpModule" type="Microsoft.AspNet.TelemetryCorrelation.TelemetryCorrelationHttpModule, Microsoft.AspNet.TelemetryCorrelation" preCondition="integratedMode,managedHandler" />
			<remove name="ApplicationInsightsWebTracking" />
			<add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web" preCondition="managedHandler" />
		</modules>
		<validation validateIntegratedModeConfiguration="false" />

		<handlers>
			<remove name="ExtensionlessUrlHandler-Integrated-4.0" />
			<remove name="OPTIONSVerbHandler" />
			<remove name="TRACEVerbHandler" />
			<add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
		</handlers>

	</system.webServer>
	<runtime>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Owin.Security" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Owin.Security.OAuth" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Owin.Security.Cookies" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Newtonsoft.Json" culture="neutral" publicKeyToken="30ad4fe6b2a6aeed" />
				<bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Optimization" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Antlr3.Runtime" publicKeyToken="eb42632606e9261f" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-3.5.0.2" newVersion="3.5.0.2" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Diagnostics.DiagnosticSource" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-4.0.2.1" newVersion="4.0.2.1" />
			</dependentAssembly>
		</assemblyBinding>
	</runtime>
	<entityFramework>
		<defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
			<parameters>
				<parameter value="mssqllocaldb" />
			</parameters>
		</defaultConnectionFactory>
		<providers>
			<provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
		</providers>
	</entityFramework>
</configuration>