@* Competency Framework's CTID *@
@model string
@{
    ViewBag.Title = "Competency Framework";
}
@Html.Partial( "~/Views/Detail/_CompetencyFrameworkSharedV2.cshtml" )

<script type="text/javascript">
	var Modals = {
		Windows: []
	};
	$(document).ready(function () {
		setupFramework();
	});

	function setupFramework() {
		var alignmentTypes = [
			{ property: "ceasn:alignFrom", label: "Aligns from" },
			{ property: "ceasn:alignTo", label: "Aligns to" },
			{ property: "ceasn:broadAlignment", label: "Broad Alignment with" },
			{ property: "ceasn:exactAlignment", label: "Exact Alignment with" },
			{ property: "ceasn:majorAlignment", label: "Major Alignment with" },
			{ property: "ceasn:minorAlignment", label: "Minor Alignment with" },
			{ property: "ceasn:narrowAlignment", label: "Narrow Alignment with" },
			{ property: "ceasn:prerequisiteAlignment", label: "Prerequisite Alignment with" }
		];
		CompetencyFrameworks.getAllFrameworkData(["@Model"], [], {
			Frameworks: function () {
				console.log("Loaded Framework");
				//Render the framework
				var FrameworkData = getFramework();
				var FrameworkBox = $(".frameworkBox");
				CompetencyFrameworks.writeFramework(FrameworkData.Framework, FrameworkBox);
				//Publication status type
				if (FrameworkData.Framework["ceasn:publicationStatusType"]) {
					var statuses = ["Published", "Draft", "Deprecated"];
					FrameworkBox.find(".frameworkStatus").html(statuses.filter(function (m) { return FrameworkData.Framework["ceasn:publicationStatusType"].toLowerCase().indexOf(m.toLowerCase()) })[0] || "Unknown"); //cheat
				}
				else{
					FrameworkBox.find(".frameworkStatus").html("Unavailable");
				}
				if(!FrameworkData.Framework["ceasn:source"]){
					FrameworkBox.find(".frameworkSource").remove();
				}
				//Date modified
				if(FrameworkData.Framework["ceasn:dateModified"]){
					try{
						var date = new Date(FrameworkData.Framework["ceasn:dateModified"]);
						FrameworkBox.find(".frameworkDateModified").html(date.toString());
					}
					catch(e){}
				}
				else{
					FrameworkBox.find(".frameworkDateModified").html( "Unknown" )
				}

				//Render the competencies
				FrameworkData.Framework["ceasn:hasTopChild"].forEach(function (topChildURI) {
					var topChild = FrameworkData.Competencies.filter(function (m) { return m["@@id"] == topChildURI })[0];
					if (topChild) {
						CompetencyFrameworks.renderCompetencyTree(topChild, $(".frameworkCompetencies"), null, function (competencyData, Rendered) {
							competencyData.Rendered = Rendered;
							competencyData.Rendered.ConceptsBox = competencyData.Rendered.Box.find(".competencyConcepts");
							competencyData.Rendered.AlignedCompetencyBox = competencyData.Rendered.Box.find(".alignedCompetencies");
						});
					}
					else {
						console.log("Error: Framework references a topChild that does not exist in the list of retrieved competencies:", { topChildURI: topChildURI, frameworkCompetencies: FrameworkData.Framework.Competencies });
					}
				});

				//Render JSON modal
				var JSONModal = createModal($(".rawJSONFrameworkButton"), $(".rawJSONModals"));
				var JSONBox = $($("#template_rawjson").html()).appendTo(JSONModal.ContentBox);
				var graphURI = FrameworkData["@@id"].replace("/resources/", "/graph/");

				JSONModal.ToggleButton.html($("#template_jsonldmodalbutton").html());
				JSONModal.ToggleButton.find(".label").html(CompetencyFrameworks.getEnglish(FrameworkData.Framework["ceasn:name"]) + "<br />Raw Metadata");
				JSONModal.LabelBox.html(CompetencyFrameworks.getEnglish(FrameworkData.Framework["ceasn:name"]));
				JSONBox.find(".ctid").html(FrameworkData.Framework["ceterms:ctid"]);
				JSONBox.find(".registryURI").attr("href", graphURI).html(graphURI);
				JSONBox.find(".rawData").html(JSON.stringify(FrameworkData.Raw, null, "\t"));

				$(".rawJSONBox").removeClass("hidden");
			},
			Organizations: function () {
				console.log("Loaded Organizations");
				//Render publisher and creator
				var ownerBox = $(".ownerBox");
				var FrameworkData = getFramework();
				var roles = [{ label: "Publisher", uri: "ceasn:publisher" }, { label: "Creator", uri: "ceasn:creator" }];
				roles.forEach(function (role) {
					if (FrameworkData.Framework[role.uri]) {
						FrameworkData.Framework[role.uri].forEach(function (targetOrgURI) {
							var org = CompetencyFrameworks.get(CompetencyFrameworks.Organizations, "ceterms:ctid", CompetencyFrameworks.URItoCTID(targetOrgURI));
							if (org) {
								ownerBox.append("<div><b>" + role.label + ":</b> <a href=\"@Url.Content( "~/organization/" )" + org["ceterms:ctid"] + "\" target=\"_blank\">" + CompetencyFrameworks.getEnglish(org["ceterms:name"]  + "</a></div>"));
							}
							else {
								console.log("Error: Unable to find organization", { role: role, uri: targetOrgURI });
							}
						});
					}
				});
			},
			ConceptSchemes: function () {
				console.log("Loaded Concept Schemes");
				CompetencyFrameworks.ConceptSchemes.forEach(function(schemeData){
					//Render human readable modals
					var HumanModal = createModal($(".conceptSchemesButtons"), $(".conceptSchemesModals"));
					HumanModal.ToggleButton.html($("#template_conceptschemebutton").html());
					HumanModal.ToggleButton.find(".label").html(CompetencyFrameworks.getEnglish(schemeData.Scheme["ceasn:name"]));
					HumanModal.LabelBox.html(CompetencyFrameworks.getEnglish(schemeData.Scheme["ceasn:name"]));
					var schemeBox = $($("#template_conceptscheme").html()).appendTo(HumanModal.ContentBox);
					schemeBox.find(".description").html(CompetencyFrameworks.getEnglish(schemeData.Scheme["ceasn:description"]));
					var conceptList = schemeBox.find(".conceptList");
					schemeData.Concepts.forEach(function (concept) {
						conceptList.append("<dt>" + CompetencyFrameworks.getEnglish(concept["skos:prefLabel"]) + "</dt>");
						conceptList.append("<dd>" + CompetencyFrameworks.getEnglish(concept["skos:definition"]) + "</dt>");
					});

					//Render JSON modals
					var graphURI = schemeData["@@id"];
					var JSONModal = createModal($(".rawJSONConceptButtons"), $(".rawJSONModals"));
					JSONModal.ToggleButton.html($("#template_jsonldmodalbutton").html());
					JSONModal.ToggleButton.find(".label").html(CompetencyFrameworks.getEnglish(schemeData.Scheme["ceasn:name"]) + "<br />Raw Metadata");
					JSONModal.LabelBox.html(CompetencyFrameworks.getEnglish(schemeData.Scheme["ceasn:name"]));
					var jsonBox = $($("#template_rawjson").html()).appendTo(JSONModal.ContentBox);
					jsonBox.find(".ctid").html(schemeData.Scheme["ceterms:ctid"]);
					jsonBox.find(".registryURI").attr("href", graphURI).html(graphURI);
					jsonBox.find(".rawData").html(JSON.stringify(schemeData.Raw, null, "\t"));

					$(".conceptSchemesBox").removeClass("hidden");
				});

				//Attach concepts to competencies
				var conceptProperties = ["ceasn:conceptKeyword", "ceasn:complexityLevel", "ceasn:conceptTerm"];
				CompetencyFrameworks.allCompetencies().forEach(function (Competency) {
					conceptProperties.forEach(function (property) {
						CompetencyFrameworks.renderTermList(Competency[property], Competency.Rendered.ConceptsBox.find("[data-scheme='" + property + "']"));
					});
				});

			},
			Credentials: function () {
				console.log("Loaded Credentials");
				var FrameworkData = getFramework();
				var container = $(".frameworkBox .relatedCredentials");
				renderRelatedCTDL(FrameworkData.Credentials, container, "credential", "Credentials");
			},
			Assessments: function () {
				console.log("Loaded Assessments");
				var FrameworkData = getFramework();
				var container = $(".frameworkBox .relatedAssessments");
				renderRelatedCTDL(FrameworkData.Assessments, container, "assessment", "Assessments");
			},
			LearningOpportunities: function () {
				console.log("Loaded Learning Opportunities");
				var FrameworkData = getFramework();
				var container = $(".frameworkBox .relatedLearningOpportunities");
				renderRelatedCTDL(FrameworkData.LearningOpportunities, container, "learningopportunity", "Learning Opportunities");
			},
			AlignedFrameworks: function () {
				console.log("Loaded Aligned Frameworks");
				var FrameworkData = getFramework();
				var alignedFrameworksBox = $(".alignedFrameworks");
				var template = $("#template_alignedframework").html();
				alignedFrameworksBox.html("");
				var totalAlignments = 0;
				alignmentTypes.forEach(function(type){
					if(FrameworkData.Framework[type.property]){
						FrameworkData.Framework[type.property].forEach(function (targetURI) {
							var Aligned = CompetencyFrameworks.AlignedFrameworks.filter(function(m){ return m["@@id"] == targetURI })[0];
							var box = $(template).appendTo(alignedFrameworksBox);
							box.find(".alignmentType").html(type.label + ":");
							box.find(".name").attr("href", "@Url.Content( "~/competencyframework/" )" + Aligned["ceterms:ctid"]).html(CompetencyFrameworks.getEnglish(Aligned["ceasn:name"]));
							box.find(".description").html(CompetencyFrameworks.getEnglish(Aligned["ceasn:description"]));
							totalAlignments++;
						});
					}
				});
				if (totalAlignments == 0) {
					alignedFrameworksBox.html("<div>No Frameworks found that reference this Framework.</div>");
				}
			},
			AlignedCompetencies: function () {
				console.log("Loaded Aligned Competencies");
				var FrameworkData = getFramework();
				var template = $("#template_alignedframework").html();
				FrameworkData.Competencies.forEach(function(Competency){
					alignmentTypes.forEach(function(type){
						if(Competency[type.property]){
							Competency[type.property].forEach(function(targetURI){
								var Aligned = CompetencyFrameworks.AlignedCompetencies.filter(function(m){ return m["@@id"] == targetURI })[0];
								var box = $(template).appendTo(Competency.Rendered.AlignedCompetencyBox);
								box.find(".alignmentType").html(type.label + ":");
								box.find(".name").attr("href", "@Url.Content( "~/competencyframework/" )" + Aligned["ceasn:isPartOf"]).html(CompetencyFrameworks.getEnglish(Aligned["ceasn:competencyText"]));
							});
						}
					});
				});
			}
		});
	}
	//

	function getFramework() {
		return CompetencyFrameworks.get(CompetencyFrameworks.Frameworks, "ceterms:ctid", "@Model");
	}
	//

	function renderRelatedCTDL(items, container, dataType, label){
		var template = $("#template_relatedctdl").html();
		container.html("");
		items.forEach(function (item) {
			var box = $(template).appendTo(container);
			box.find(".name").attr("href", "@Url.Content( "~/" )" + dataType + "/" + item["ceterms:ctid"]).html(CompetencyFrameworks.getEnglish(item["ceterms:name"]));
			box.find(".description").html(CompetencyFrameworks.getEnglish(item["ceterms:description"]));
		});
		if (items.length == 0) {
			container.html("<div>No " + label + " found that reference this Framework.</div>");
		}
	}
	//

	function createModal(buttonContainer, windowContainer) {
		var Modal = {};
		Modal.ToggleButton = $("<button class=\"modalButton blueButton\"></button>").appendTo(buttonContainer);
		Modal.Window = $($("#template_modalwindow").html()).appendTo(windowContainer);
		Modal.CloseButton = Modal.Window.find(".closeButton");
		Modal.LabelBox = Modal.Window.find(".modalTitle .label");
		Modal.ContentBox = Modal.Window.find(".modalContent");

		Modal.ToggleButton.on("click", function (e) {
			e.stopPropagation();
			Modal.Window.toggleClass("hidden");
			Modals.Windows.filter(function (m) { return m != Modal }).forEach(function (item) {
				item.Window.addClass("hidden");
			});
		});
		Modal.CloseButton.on("click", function () {
			Modal.Window.addClass("hidden");
		});
		Modal.Window.on("click", function (e) {
			e.stopPropagation();
		})
		$("html").not(Modal.ToggleButton, Modal.Window).on("click", function () {
			Modal.Window.addClass("hidden");
		});

		Modals.Windows.push(Modal);
		return Modal;
	}
	//

</script>
<style type="text/css">
	.section.hidden { display: none; }

	.banner { padding: 15px 1vw; margin: 0 -5vw; background-color: #0F3E63; color: #FFF; }
	.banner * { color: inherit; }
	.areaHeader { background-color: #F5F5F5; padding: 5px 5vw; margin: 0 -5vw; }
	.header { padding: 5px 0; margin-top: 5px; }
	.ownerBox { padding: 0 25px; }
	.ownerBox a, .ownerBox a:hover, .ownerBox a:focus { color: #FFF; }
	.frameworkDescription { padding: 10px; }
	.frameworkSource { padding: 5px 10px; }
	.frameworkCompetencies { padding: 10px; }

	.frameworkInfo .moreInfoBox { margin-bottom: 10px; }
	.frameworkInfo .moreInfoBox .frameworkReference { padding: 5px 10px; }
	.frameworkInfo .moreInfoBox .ctdl, .frameworkInfo .moreInfoBox .ctdlasn { margin-bottom: 5px; }
	.frameworkInfo .frameworkSource:empty { display: none; }

	.competency .competencyContent { padding: 5px; border-top: 1px solid rgba(0,0,0,0.1); }
	.frameworkCompetencies > .competency:first-child > .competencyContent { border: none; }
	.competency .competencyTitle { display: flex; align-items: baseline; }
	.competency .competencyTag { padding: 1px 5px; background-color: rgba(0,0,0,0.05); font-weight: lighter; margin: 1px 2px; }
	.competency .competencyTag:empty { display: none; }
	.competency .competencyChildren { padding-left: 25px; }
	.competency .competencyComment { padding: 5px 10px; font-weight: lighter; }
	.competency .competencyComment:empty { padding: 0; }
	.competency .competencyConcepts { display: flex; justify-content: flex-end; }
	.competency .competencyConcepts .conceptList { display: flex; }
	.competency .competencyConcepts .conceptList .concept { margin: 1.5px 2.5px; padding: 2px 5px; background: rgba(0,0,0,0.1); cursor: help; }

	.modalButtons { display: flex; padding: 10px; }
	.modalButtons.rawJSONButtons { justify-content: flex-end; }
	.modalButtons .buttonList { display: flex; }
	.modalButtons button { display: flex; align-items: center; margin: 2.5px 5px; }
	.modalButtons button .label { padding: 5px; }
	.modalButtons button .expandIcon { margin-left: 10px; font-size: 24px; }
	.modalWindows .modal { display: flex; flex-direction: column; position: fixed; top: 5vh; bottom: 10vh; left: 10vw; right: 10vw; border: 1px solid #CCC; box-shadow: 0 0 50px rgba(0,0,0,0.3); z-index: 10000; }
	.modalWindows .modal.hidden { display: none; }
	.modalWindows .modal .modalTitle { display: flex; align-items: center; background-color: #CAD9DB; min-height: 45px; font-size: 20px; padding: 10px; font-weight: bold; }
	.modalWindows .modal .modalTitle .closeButton { margin-left: auto; width: 30px; height: 30px; }
	.modalWindows .modal .modalContentWrapper { flex: auto 1 1; overflow-y: scroll; padding: 5px; background-color: #F5F5F5; }
	.modalWindows .modal .modalContentWrapper .modalContent { background-color: #FCFCFC; border: 1px solid #CAD9DB; }
	.modalWindows .modal .modalContentWrapper .modalContent .label { padding: 5px; font-weight: bold; padding: 5px; background-color: #CAD9DB; }
	.modalWindows .modal .modalContentWrapper .modalContent .label.midLabel { background-color: #DDD; }
	.modalWindows .modal .modalContentWrapper .modalContent .modalSection { padding: 5px 5px 10px 5px; }
	.modalWindows .modal .rawData { font-family: Consolas, 'Courier New', monospace; white-space: pre-wrap; font-size: 12px; padding: 5px; }

	.modalWindows .modal dl { padding: 5px; margin: 0; }
	.modalWindows .modal dl dt { font-weight: bold; padding: 2.5px 10px; }
	.modalWindows .modal dl dd { margin: 0 10px 5px 40px; }

</style>

<div class="frameworkBox">
	<div class="section banner">
		<h1 class="frameworkName">Competency Framework Loading <i class="fas fa-spin fa-spinner"></i></h1>
		<div class="ownerBox"></div>
	</div>
	<div class="section frameworkInfo">
		<h3 class="areaHeader">Description</h3>
		<div class="descriptionBox">
			<div class="frameworkDescription"></div>
			<a class="linkButton greenButton frameworkSource" href="" target="_blank"></a>
		</div>
		<div class="moreInfoBox">
			<h4 class="header">Publication Status</h4>
			<div class="frameworkReference frameworkStatus"><i class="fas fa-spin fa-spinner"></i></div>
			<h4 class="header">Date Modified</h4>
			<div class="frameworkReference frameworkDateModified"><i class="fas fa-spin fa-spinner"></i></div>
			<h4 class="header">Credentials that Reference this Framework</h4>
			<div class="frameworkReference relatedCredentials"><i class="fas fa-spin fa-spinner"></i></div>
			<h4 class="header">Assessments that Reference this Framework</h4>
			<div class="frameworkReference relatedAssessments"><i class="fas fa-spin fa-spinner"></i></div>
			<h4 class="header">Learning Opportunities that Reference this Framework</h4>
			<div class="frameworkReference relatedLearningOpportunities"><i class="fas fa-spin fa-spinner"></i></div>
			<h4 class="header">Frameworks that reference this Framework</h4>
			<div class="frameworkReference alignedFrameworks"><i class="fas fa-spin fa-spinner"></i></div>
		</div>
	</div>
	<div class="section conceptSchemesBox hidden">
		<h4 class="header">Concept Schemes</h4>
		<div class="conceptSchemesButtons modalButtons"></div>
		<div class="conceptSchemesModals modalWindows"></div>
	</div>
	<div class="section competenciesBox">
		<h3 class="areaHeader">Competencies</h3>
		<div class="frameworkCompetencies"></div>
	</div>
	<div class="section rawJSONBox hidden">
		<h3 class="areaHeader">Registry Data</h3>
		<div class="rawJSONButtons modalButtons">
			<div class="rawJSONConceptButtons buttonList"></div>
			<div class="rawJSONFrameworkButton buttonList"></div>
		</div>
		<div class="rawJSONModals modalWindows"></div>
	</div>
</div>

<div class="templates">
	<script type="text/template" id="template_relatedctdl">
		<div class="ctdl">
			<a class="name"></a>
			<div class="description"></div>
		</div>
	</script>

	<script type="text/template" id="template_alignedframework">
		<div class="ctdlasn">
			<div class="alignmentTitle">
				<div class="alignmentType"></div>
				<a class="name"></a>
			</div>
			<div class="description"></div>
		</div>
	</script>


	<script type="text/template" id="template_modalwindow">
		<div class="modal hidden">
			<div class="modalTitle">
				<div class="label"></div>
				<button class="closeButton"><i class="fas fa-times"></i></button>
			</div>
			<div class="modalContentWrapper">
				<div class="modalContent"></div>
			</div>
		</div>
	</script>

	<script type="text/template" id="template_rawjson">
		<div>
			<div class="label">Registry Information</div>
			<div class="modalSection">
				<div><b>URI:</b> <a class="registryURI" target="_blank"></a></div>
				<div><b>CTID:</b> <span class="ctid"></span></div>
			</div>
			<div class="label midLabel">Raw Metadata</div>
			<div class="modalSection">
				<div class="rawData"></div>
			</div>
		</div>
	</script>

	<script type="text/template" id="template_conceptscheme">
		<div>
			<div class="label">Description</div>
			<div class="modalSection">
				<div class="description"></div>
			</div>
			<div class="label midLabel">Concepts</div>
			<dl class="conceptList"></dl>
		</div>
	</script>

	<script type="text/template" id="template_conceptschemebutton">
		<div class="label"></div>
		<i class="fas fa-arrows-alt expandIcon"></i>
	</script>

	<script type="text/template" id="template_jsonldmodalbutton">
		<img src="@Url.Content( "~/images/icons/icon_jsonld.png" )" />
		<div class="label"></div>
	</script>
</div>