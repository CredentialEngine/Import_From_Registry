@{
    ViewBag.Title = "Finder Activity Search";
}

<link href="https://code.jquery.com/ui/1.12.0-rc.2/themes/smoothness/jquery-ui.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/jqgrid/4.6.0/css/ui.jqgrid.css" rel="stylesheet" />
<style>
    .ui-jqgrid .ui-pg-selbox {
        height: 40px;
    }

    #jqGridPager {
        height: 45px;
    }

    .ui-jqgrid .ui-pg-input {
        height: 20px;
    }
</style>
<h1>Activity Search</h1>
<br />
<div style="width:90%">
    <table id="jqGrid" align="center"></table>
    <div id="jqGridPager"></div>
    <br />
</div>
<div id="dialog" title="edit view" style="overflow: hidden;"></div>

@section scripts{
    <script src="https://cdn.jsdelivr.net/jqgrid/4.6.0/i18n/grid.locale-en.js"></script>
    <script src="https://cdn.jsdelivr.net/jqgrid/4.6.0/jquery.jqGrid.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.0-rc.2/jquery-ui.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

    <script type="text/javascript">
        var template1 =
      {
          "groupOp": "AND",
          "rules": [
            { "field": "DisplayDate", "op": "eq", "data": "today" },
            { "field": "Activity", "op": "nc", "data": "session" }
          ]
      };

        var template2 =
        {
            "groupOp": "AND",
            "rules": [
              { "field": "Activity", "op": "eq", "data": "Credential" },
              { "field": "DisplayDate", "op": "eq", "data": "today" }
            ]
        };
        $(document).ready(function () {

            var myGrid = $('#jqGrid');
            myGrid.jqGrid({
                url: '@Url.Content( "~/Admin/Activity/GetActivity/")',
                datatype: "json",
                contentType: "application/json; charset-utf-8",
                mtype: 'GET',
                colNames: ['Id', 'Created', 'Activity', 'Event', 'Comment', 'Action By User', 'Activity ObjectId', 'Referrer'],
                colModel: [
                    { name: 'Id', key: true, width: 75, searchtype: "integer"
                        , searchoptions: { sopt: ['le', 'gt'] }
                    },
                    {
                        name: 'DisplayDate', key: true, width: 75, searchoptions: { sopt: ['eq', 'lt', 'gt'] }
                    },
                    { name: 'Activity', key: true, width: 75
                        , searchoptions: { sopt: ['eq', 'bw', 'bn', 'cn', 'nc', 'ew', 'en'] }
                    },
                    { name: 'Event', key: true, width: 75
                        , searchoptions: { sopt: ['eq', 'bw', 'bn', 'cn', 'nc', 'ew', 'en'] }
                    },
                    { name: 'Comment', key: true, width: 200
                        , searchoptions: { sopt: ['eq', 'bw', 'bn', 'cn', 'nc', 'ew', 'en'] }
                    },
                    {
                        name: 'ActionByUser', key: true, width: 100
                    , searchoptions: { sopt: ['cn'] }
                    },
                    {
                        name: 'ActivityObjectId', key: true, width: 100
                    , searchoptions: { sopt: ['eq', 'le', 'ge'] }
                    },
                    {
                        name: 'Referrer',
                        edittype: 'select',
                        formatter: 'showlink', //predefined formatter to display hyperlink
                        formatoptions: { baseLinkUrl: "/" }
                    }

                ],
                autowidth: true,
                height: 550,
                rowNum: 20,
                rowList: [10, 20, 50, 100, 500],
                pager: '#jqGridPager',
                gridview: true,
                rownumbers: false,
                viewrecords: true,
                pagerpos: 'center'
            });
            $('#jqGrid').setGridParam({
                postData: {
                    filters: template1
                }
            });
            $("#jqGrid").jqGrid('navGrid', '#jqGridPager',
                  { add: false, edit: false, del: false, search: true, refresh: true },
                  {},
                  {},
                  {},
                  {
                      closeOnEscape: true,
                      multipleSearch: true,
                      showQuery: true,
                      closeAfterSearch: true,
                      // set the names of the template
                      "tmplNames": ["Today", "Credentials Today"],
                      // set the template contents
                      "tmplFilters": [template1, template2]
                  }
                 );
            $("#jqGrid").jqGrid('filterToolbar', { searchOperators: true });

        });


        function exportData(e, id) {

            var gridid = jQuery(id).getDataIDs(); // Get all the ids in array
            var label = jQuery(id).getRowData(gridid[0]); // Get First row to get the labels
            var selRowIds = jQuery(id).jqGrid('getGridParam', 'selarrrow');

            var obj = new Object();
            obj.count = selRowIds.length;

            if (obj.count) {

                obj.items = new Array();

                for (elem in selRowIds) {
                    obj.items.push(jQuery(id).getRowData(selRowIds[elem]));
                }

                var json = JSON.stringify(obj);

                JSONToCSVConvertor(json, "csv", 1);
            }
        }


        function JSONToCSVConvertor(JSONData, ReportTitle, ShowLabel) {

            //If JSONData is not an object then JSON.parse will parse the JSON string in an Object
            var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;
            var CSV = '';
            //This condition will generate the Label/Header
            if (ShowLabel) {
                var row = "";

                //This loop will extract the label from 1st index of on array
                for (var index in arrData.items[0]) {
                    //Now convert each value to string and comma-seprated
                    row += index + ',';
                }
                row = row.slice(0, -1);
                //append Label row with line break
                CSV += row + '\r\n';
            }

            //1st loop is to extract each row
            for (var i = 0; i < arrData.items.length; i++) {
                var row = "";
                //2nd loop will extract each column and convert it in string comma-seprated
                for (var index in arrData.items[i]) {
                    row += '"' + arrData.items[i][index].replace(/(<([^>]+)>)/ig, '') + '",';
                }
                row.slice(0, row.length - 1);
                //add a line break after each row
                CSV += row + '\r\n';
            }

            if (CSV == '') {
                alert("Invalid data");
                return;
            }

            /*
             *
             * FORCE DOWNLOAD
             *
             */


            //this trick will generate a temp "a" tag
            var link = document.createElement("a");
            link.id = "lnkDwnldLnk";

            //this part will append the anchor tag and remove it after automatic click
            document.body.appendChild(link);

            var csv = CSV;
            blob = new Blob([csv], { type: 'text/csv' });

            var myURL = window.URL || window.webkitURL;

            var csvUrl = myURL.createObjectURL(blob);
            var filename = 'UserExport.csv';
            jQuery("#lnkDwnldLnk")
            .attr({
                'download': filename,
                'href': csvUrl
            });

            jQuery('#lnkDwnldLnk')[0].click();
            document.body.removeChild(link);

        }
    </script>
}