<?xml version="1.0" encoding="utf-8"?>
<configuration>
	<configSections>
		<!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
		<section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
	</configSections>
	<startup>
		<supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.2" />
	</startup>
	<appSettings>
		<add key="UnobtrusiveJavaScriptEnabled" value="true" />
		<add key="aspnet:MaxJsonDeserializerMembers" value="5000" />
		<add key="siteVersion" value="2020-09-30" />
		<!-- ?????-->
		<add key="ClientSettingsProvider.ServiceUri" value="" />
		<add key="envType" value="development" />
		<add key="serverName" value="localhost" />
		<!-- Options:
				daily, 
				sinceLastRun, 
				hourly, 
				adhoc, 
				or integer - meaning minutes. Could use to schedule for 7:00 am and minutes since 8pm previous night
					will need to record or derive the last run 
			-->
		<add key="scheduleType" value="adhoc" />
		<!-- Normally false, set to true if say only want to download and save the registry document and not import data-->
		<add key="DoingDownloadOnly" value="true" />

		<!-- ========================================================================-->

		<!-- NOTE: start/end dates will be converted to UTC before calling the registry searches.
	If the dates will be provided in UTC, be sure to set usingUTC_ForTime to false. -->
		<add key="startingDate" value="2017-12-01T00:00:00" />
		<!-- If doing an adhoc import and the endDate is to be less than the current date, then provide an end date.-->
		<add key="endingDate" value="2021-12-31T00:00:00" />
		<add key="usingUTC_ForTime" value="true" />
		<!-- Indicate which document types to import. Only those with a value of true will be imported. Note that there is no a full import for competency frameworks and pathways at this time.-->
		<!--
		<add key="importing_credential"					value="true"/>
		<add key="importing_cost_manifest_schema"		value="true"/>
		<add key="importing_condition_manifest_schema"	value="true"/>
		<add key="importing_assessment_profile"			value="true"/>
		<add key="importing_learning_opportunity_profile" value="true"/>
		<add key="importing_organization"				value="true"/>
		<add key="importing_competency_framework"		value="true"/>
		<add key="importing_pathway"					value="true"/>
		<add key="importing_pathwayset"					value="true"/>
		<add key="importing_rating"						value="true"/>
		<add key="importing_rubric"						value="true"/>
		<add key="importing_transfer_value_profile"		value="true"/>

-->
		<add key="importing_credential" value="true" />
		<add key="importing_cost_manifest_schema" value="true" />
		<add key="importing_condition_manifest_schema" value="true" />
		<add key="importing_assessment_profile" value="true" />
		<add key="importing_learning_opportunity_profile" value="true" />
		<add key="importing_organization" value="true" />
		<add key="importing_competency_framework" value="true" />
		<add key="importing_pathway" value="false" />
		<add key="importing_pathwayset" value="false" />
		<add key="importing_rating" value="false" />
		<add key="importing_rubric" value="false" />
		<add key="importing_transfer_value_profile" value="false" />


		<!-- *** Actions: 0-normal; 1-DeleteOnly; 2-SkipDelete -->
		<add key="deleteAction" value="2" />


		<!-- *** set to 0 to import all based on import type or set to a number to limit the number of records to import per run. Useful for initial testing.  -->
		<add key="maxImportRecords" value="0" />
		<add key="importPageSize" value="100" />
		<add key="maxExceptions" value="200" />


		<!-- ====== registry ============================================= -->
		<!-- The public community is ce-registry for all environments. If using a custom community, then specify as the default - so only it will be the target, or populate additionalCommunity so that both communities will be targetted as sources. -->
		<!--<add key="defaultCommunity" value="ce-registry"/>-->
		<add key="defaultCommunity" value="ce-registry" />
		<add key="additionalCommunity" value="navy" />

		<!-- sandbox 
		<add key="MyCredentialEngineAPIKey" value="PROVIDE YOUR ACCOUNTS API KEY" />
		<add key="credentialRegistryUrl" value="https://sandbox.credentialengineregistry.org" />
		<add key="cerGetEnvelope" value="https://sandbox.credentialengineregistry.org/{0}/envelopes/{1}" />
		<add key="credentialRegistrySearch" value="https://sandbox.credentialengineregistry.org/{0}/search?" />
		<add key="credentialRegistryResource" value="https://sandbox.credentialengineregistry.org/{0}/resources/{1}" />
		<add key="AssistantCTDLJSONSearchAPIUrl" value="https://sandbox.credentialengine.org/assistant/search/ctdl" />
		<add key="AssistantGremlinSearchAPIUrl" value="https://sandbox.credentialengine.org/assistant/search/gremlin" />
 -->
		<!-- Staging	  
		<add key="MyCredentialEngineAPIKey" value="PROVIDE YOUR ACCOUNTS API KEY" />
    <add key="credentialRegistryUrl" value="https://staging.credentialengineregistry.org" />
    <add key="cerGetEnvelope" value="https://staging.credentialengineregistry.org/{0}/envelopes/{1}" />
    <add key="credentialRegistrySearch" value="https://staging.credentialengineregistry.org/{0}/search?" />
    <add key="credentialRegistryResource" value="https://staging.credentialengineregistry.org/{0}/resources/{1}" />
	<add key="AssistantCTDLJSONSearchAPIUrl" value="https://credentialengine.org/raStaging/search/ctdl" />
	<add key="AssistantGremlinSearchAPIUrl" value="https://credentialengine.org/raStaging/search/gremlin" />	
-->
		<!-- Production  -->
		<add key="MyCredentialEngineAPIKey" value="PROVIDE YOUR ACCOUNTS API KEY" />
		<add key="credentialRegistryUrl" value="https://credentialengineregistry.org" />
		<add key="cerGetEnvelope" value="https://credentialengineregistry.org/{0}/envelopes/{1}" />
		<add key="ceCredentialRegistrySearch" value="https://apps.credentialengine.org/assistant/{0}/search?" />
		<add key="credentialRegistrySearch" value="https://credentialengineregistry.org/{0}/search?" />
		<add key="credentialRegistryResource" value="https://credentialengineregistry.org/{0}/resources/{1}" />
		<add key="AssistantCTDLJSONSearchAPIUrl" value="https://credentialengine.org/assistant/search/ctdl" />
		<add key="AssistantGremlinSearchAPIUrl" value="https://credentialengine.org/assistant/search/gremlin" />



		<!-- ACCOUNT/CONTACT US NOTIFICATION ====================================================== -->

		<!-- LOG SETTINGS ========================================================================
      Notes:
        - Be sure to give write access to the everyone role for the following log file
    -->
		<add key="logErrors" value="yes" />
		<add key="notifyOnException" value="no" />
		<!-- Set to the max level of tracing to display from DoTrace methods -->
		<add key="appTraceLevel" value="5" />
		<!-- Path and filename for file to store error messages-->
		<add key="path.error.log" value="C:\@logs\CERegistryDownload\[date]_ErrorLog.txt" />
		<add key="path.email.log" value="C:\@logs\CERegistryDownload\[date]_EmailLog.txt" />
		<!-- Path and filename for file to store trace messages.-->
		<add key="path.trace.log" value="C:\@logs\CERegistryDownload\[date]_TraceLog.txt" />
		<add key="path.log.file" value="C:\@logs\CERegistryDownload\files\[date]_[filename].json" />

	</appSettings>
	<connectionStrings>
	
	</connectionStrings>
	<system.web.extensions>
		<scripting>
			<webServices>
				<jsonSerialization maxJsonLength="2147483647" />
			</webServices>
		</scripting>
	</system.web.extensions>
	<runtime>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-12.0.0.0" newVersion="12.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
	</runtime>
	<entityFramework>
		<defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
			<parameters>
				<parameter value="mssqllocaldb" />
			</parameters>
		</defaultConnectionFactory>
		<providers>
			<provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
		</providers>
	</entityFramework>
	<runtime>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
	</runtime>
	<system.web>
		<membership defaultProvider="ClientAuthenticationMembershipProvider">
			<providers>
				<add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
			</providers>
		</membership>
		<roleManager defaultProvider="ClientRoleProvider" enabled="true">
			<providers>
				<add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
			</providers>
		</roleManager>
	</system.web>
</configuration>
